{"version":3,"sources":["StopWatch.js","App.js","index.js"],"names":["StopWatch","props","useState","hour","setHour","minute","setMinute","seconds","setSeconds","ms","setMs","intID","setIntID","startTime","setStartTime","milliseconds","setMilliseconds","useEffect","id","setInterval","timer","milliElapsed","Date","now","milliDisplay","Math","floor","sec","secDisplay","min","minDisplay","toString","padStart","reset","clearInterval","className","onClick","stTime","App","ReactDOM","render","document","getElementById"],"mappings":"+NAiGeA,MA9Ff,SAAmBC,GACjB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoBN,mBAAS,OAA7B,mBAAOO,EAAP,KAAWC,EAAX,KAEA,EAA0BR,mBAAS,MAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAkCV,mBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAwCZ,mBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACR,GAAkB,IAAdJ,EAAJ,CACA,IAAMK,EAAKC,YAAYC,EAAO,GAC9BR,EAASM,MACR,CAACL,IAEJ,IAAMO,EAAQ,WACZ,IACIC,EADaC,KAAKC,MACQV,EAAYE,EAE1CC,EAAgBK,GAIhB,IAAIG,EAAeH,EAAe,IAClCG,EAAeC,KAAKC,MAAMF,GAC1B,IAAMG,EAAMN,EAAe,IACvBO,EAAaD,EAAM,GACvBC,EAAaH,KAAKC,MAAME,GACxB,IAAMC,EAAMF,EAAM,GACdG,EAAaD,EAAM,GACvBC,EAAaL,KAAKC,MAAMI,GACxB,IAAI3B,EAAO0B,EAAM,GACjB1B,EAAOsB,KAAKC,MAAMvB,GAElBC,EAAQD,EAAK4B,WAAWC,SAAS,EAAG,MACpC1B,EAAUwB,EAAWC,WAAWC,SAAS,EAAG,MAC5CxB,EAAWoB,EAAWG,WAAWC,SAAS,EAAG,MAC7CtB,EAAMc,EAAaO,WAAWC,SAAS,EAAG,OAUtCC,EAAQ,WACE,OAAVtB,GACFuB,cAAcvB,GAEhBP,EAAQ,MACRE,EAAU,MACVE,EAAW,MACXE,EAAM,OACNM,EAAgB,IAelB,OACE,sBAAKmB,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBAAQA,UAAU,MAAMC,QAjChB,WACZH,IACA,IAAMI,EAASf,KAAKC,MAEpBT,EAAauB,IA6BT,mBAGA,wBAAQF,UAAU,MAAMC,QAASH,EAAjC,mBAGA,wBAAQE,UAAU,MAAMC,QArBhB,WACE,OAAVzB,GACFuB,cAAcvB,IAmBZ,mBAGA,wBAAQwB,UAAU,MAAMC,QAlBf,WACb,IAAMC,EAASf,KAAKC,MAEpBT,EAAauB,IAeT,uBAIF,qBAAKF,UAAU,cAAf,SACE,qBAAKA,UAAU,OAAf,mBAA0BhC,EAA1B,cAAoCE,EAApC,cAAgDE,EAAhD,cAA6DE,WC9EtD6B,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCHNI,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.30da2087.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./StopWatch.css\";\r\n\r\nfunction StopWatch(props) {\r\n  const [hour, setHour] = useState(\"00\");\r\n  const [minute, setMinute] = useState(\"00\");\r\n  const [seconds, setSeconds] = useState(\"00\");\r\n  const [ms, setMs] = useState(\"000\");\r\n  //   const [time, setTime] = useState(0);\r\n  const [intID, setIntID] = useState(null);\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [milliseconds, setMilliseconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (startTime === 0) return;\r\n    const id = setInterval(timer, 1);\r\n    setIntID(id);\r\n  }, [startTime]);\r\n\r\n  const timer = () => {\r\n    const currtime = Date.now();\r\n    let milliElapsed = currtime - startTime + milliseconds;\r\n\r\n    setMilliseconds(milliElapsed);\r\n    // console.log(\"currTime: \", currtime, \"    starttime: \", startTime);\r\n    // setTime(currtime);\r\n    // console.log(\"millelapsed: \", milliElapsed / 1000);\r\n    let milliDisplay = milliElapsed % 1000;\r\n    milliDisplay = Math.floor(milliDisplay);\r\n    const sec = milliElapsed / 1000;\r\n    let secDisplay = sec % 60;\r\n    secDisplay = Math.floor(secDisplay);\r\n    const min = sec / 60;\r\n    let minDisplay = min % 60;\r\n    minDisplay = Math.floor(minDisplay);\r\n    let hour = min / 60;\r\n    hour = Math.floor(hour);\r\n\r\n    setHour(hour.toString().padStart(2, \"0\"));\r\n    setMinute(minDisplay.toString().padStart(2, \"0\"));\r\n    setSeconds(secDisplay.toString().padStart(2, \"0\"));\r\n    setMs(milliDisplay.toString().padStart(3, \"0\"));\r\n  };\r\n\r\n  const start = () => {\r\n    reset();\r\n    const stTime = Date.now();\r\n    //   console.log(stTime);\r\n    setStartTime(stTime);\r\n  };\r\n\r\n  const reset = () => {\r\n    if (intID !== null) {\r\n      clearInterval(intID);\r\n    }\r\n    setHour(\"00\");\r\n    setMinute(\"00\");\r\n    setSeconds(\"00\");\r\n    setMs(\"000\");\r\n    setMilliseconds(0);\r\n  };\r\n\r\n  const pause = () => {\r\n    if (intID !== null) {\r\n      clearInterval(intID);\r\n    }\r\n  };\r\n\r\n  const resume = () => {\r\n    const stTime = Date.now();\r\n    //   console.log(stTime);\r\n    setStartTime(stTime);\r\n  };\r\n\r\n  return (\r\n    <div className=\"StopWatch\">\r\n      <div className=\"controlSection\">\r\n        <button className=\"btn\" onClick={start}>\r\n          Start\r\n        </button>\r\n        <button className=\"btn\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button className=\"btn\" onClick={pause}>\r\n          Pause\r\n        </button>\r\n        <button className=\"btn\" onClick={resume}>\r\n          Resume\r\n        </button>\r\n      </div>\r\n      <div className=\"timeSection\">\r\n        <div className=\"time\">{`${hour} : ${minute} : ${seconds} : ${ms}`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StopWatch;\r\n","// import logo from \"./logo.svg\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport StopWatch from \"./StopWatch\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StopWatch />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}